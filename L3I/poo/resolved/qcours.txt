----------- [LESSON] -----------
### Les modificateurs de classe (ClassModifiers)
    > abstract: la classe contient une ou des méthodes abstraites, qui n'ont pas de définition explicite. Une classe déclarée abstract ne peut pas être instanciée : il faut définir une classe qui hérite de cette classe et qui implémente les méthodes nécessaires pour ne plus être abstraite.
    > final: la classe/variable ne peut pas être modifiée, sa redéfinition grâce à l'héritage est interdite. Les classes déclarées final ne peuvent donc pas avoir de classes filles.

### Le mot-clé  Static
Nous utilisons le mot-clé Java static principalement lorsque nous voulons accéder aux membres sans créer d'instance de la classe. Cela signifie que les membres statiques font partie de la classe et n'appartiennent pas à l'instance de classe. Chaque fois que nous créons ce qui précède avec un mot-clé statique, nous pouvons y accéder directement sans créer d'objet. Nous pouvons utiliser le mot-clé Java static pour les éléments suivants :
    - Block
    - Variable
    - Method (ex: la methode principale 'main')
    - Class

### Règles de visibilité en Java (on considere que A est une classe)
    > private: il est accessible uniquement depuis sa propre classe, i-e classe A ;
    > protected: il est accessible de partout dans le paquetage de A et, si A est publique, grosso modo dans les classes héritant de A dans d'autres paquetages ;
    > public: il est accessible de partout dans le paquetage de A et, si A est publique, de partout ailleurs.

### Interface
    > Definition de l'interface: C'est un mot cle qui nous permet de realiser une abstraction complete. Une interface nous dit ce qu'elle fait plutot que comment elle le fait.
    Cela signifie qu'une interface ne contient que la declaration d'une fonction et ne contient pas l'implementation d'une fonction. C'est la classe qui implemente l'interface qui contiennt la definition de la fonction.
    > Caracteristique de l'interface en JAVA:
        * Fournit une abstraction complete
        * Contient uniquement la declaration de fonction
        * Similaire aux classes mais ne peut pas instacier un objet
        * Toutes les variables sont publiques, statiques et definitives (par defaut)
        * Toutes les methides sont publiques et abstraites (par defaut)
        * Peut etre implementE plusieurs fois dans une classe
        * Les variables de l'interface devront etre initialisEs lors de la declaration
        * Fournit plus de securitE.
        * Il est impossible de definit un attribut, un constructeur et une methode dans une interface
--------------------------------
------------ [2016] ------------
Q1: Qu'est ce qu'un constructeur ?
R1: Un constructeur en Java est une méthode spéciale utilisée pour initialiser des objets.
Le constructeur est appelé lorsqu’un objet d’une classe est créé.
Il peut être utilisé pour définir les valeurs initiales des attributs d’un objet.

Q2: Que signifie le mot private, static, final ?
R2: <voir ligne 14,6,4>

Q3: Que se passerait-il si la classe Point ne disposait pas des methodes getX et getY?
R3: les methodes getX et getY sont utiles pour manipuler les attributs d'accessibilitEs "private", on ne peut pas acceder aux valeurs de X et Y sans ces accesseurs 'getters'
--------------------------------
------------ [2018] ------------
Q1: Une interface peut elle contenir des attributs ?
R1: NON

Q2: Peut-on y mettre un constructeur dans une interface ?
R2: NON

Q3: Peut-on instancier une interface ?
R3: NON

Q4: Une classe peut-elle heriter plusieurs interfaces ?
R4: OUI
--------------------------------
