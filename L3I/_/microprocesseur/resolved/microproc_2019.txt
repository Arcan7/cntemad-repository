 Q1: Dessinez et expliquez l'architecture de base d'un microprocesseur
 R1: Un microprocesseur est composE de 2 elements principaux, l'unitE de commande et l'unitE de traitement.

Tout d'abord, l'unitE de commande permet de sequencer le deroulement des instructions, effectue la recherche en memoire de l'instruction et decode les instructions a executer, l'unitE de commande est egalement composEe par:

    - Le compteur de programme: contiens l'adresse de l'instruction a executer
    - Le registre d'instruction & decodeur d'instruction: range les instructions a executer dans le registre d'instruction puis decodEes par le decodeur d'instruction
    - Bloc logique de commande (ou sequenceur): organise l'execution des instructions au rythme d'une horloge

Tandis que l'unitE de traitement qui est egalement le coeur du microprocesseur regroupe les circuits qui assurent les traitements necessaires a l'execution des instructions, ceci est composEe par:

    - L'UAL (UnitE Arithmetique et Logique): un circuit complexe qui assure les fonctions logiques ou arithmethiques
    - Le registre d'etat: generalement composE de 8bits dont chacun de ces bits est un indicateur et son etat depend du resultat de la derniere operation de l'UAL
    - Les accumulateurs: ce sont des registres de travail qui stocke un operande au debut d'une operation arithmethique, et le resultat a la fin de l'operation

 -------------

 Q2: Quelle est le role des registres ?
 R2: Les registres permettent de memoriser des mots memoires ou des adresses d'une facon temporaire lors de l'execution des instructions

 -------------

 Q3: Qu'est-ce qu'un compteur ordinal ?
 R3: Le compteur ordinal ou pointeur d'instruction est le registre qui contient l'adresse mémoire de l'instruction en cours d'exécution ou prochainement exécutée. Une fois l'instruction chargée, il est automatiquement incrémenté pour pointer l'instruction suivante.

 -------------

 Q4: Donnez un exemple d'instruction et comment le processeur gere ces instructions ?
 R4:

 -------------

 Q5: Quelle est la difference entre un architecture RISC et SISC ?
 === CISC ===
Ex : intel
 Instru. complexes prenant plusieurs cycles
 Instru. au format variable
 Decodeur complexe (micro-code)
 Peu de registres
 Toutes les instructions sont susceptibles d’acceder à la mém.
 Bcp de modes d’adressage
 Compilateur simple

=== RISC ===
Ex : android
 Instru. simples ne prenant qu’un seul cycle
 Instru. au format fixe
 Decodeur simple (câblé)
 Bcp de registres
 Seules les instru. LOAD et STORE ont accès à la mém.
 Peu de modes d’adressage
 Compilateur complexe

 -------------

 Q6: Qu'est ce qu'on entend par "overflow" ?
 R6: L'overflow est un bug causé par un processus qui, lors de l'écriture dans une pile, écrit à l'extérieur de l'espace alloué à la pile, écrasant ainsi des informations nécessaires au processus. D'ou le terme overflow ou debordement en francais

 -------------

 Q7: Expliquez la pile est gerEe en LIFO ?
 R7: Une pile ou stack en anglais stocke un ensemble d’éléments en suivant l’ordre linéaire dans lequel les opérations sont appliquées, les piles sont basées sur le principe LIFO qui signifie Last In First Out: le dernier rentré sera le premier à sortir.
